[ { "title": "How to publish an NPM package", "url": "/posts/how-to-publish-an-NPM-package/", "categories": "Programming", "tags": "npm, tutorial", "date": "2023-05-20 00:33:00 -0300", "snippet": "Publishing NPM packages is a great way to share your code so other developers or yourself can reuse it. In this tutorial, I’ll walk you through the process of creating and publishing an npm package...", "content": "Publishing NPM packages is a great way to share your code so other developers or yourself can reuse it. In this tutorial, I’ll walk you through the process of creating and publishing an npm package that performs the four basic math operations: addition, subtraction, multiplication, and division.NOTE: to publish an NPM package, you must have Node.js and NPM installed on your machine.Initial settingThe first step is to create a directory for the project:mkdir just-calc &amp;&amp; cd just-calcOnce that’s done, we need to create the project’s package.json:npm initProject structuringIn the root of the project, let’s create an index.js file. In this file we will implement the functions of each mathematical operation.OBS: Make sure that in package.json the property main has the value index.js. This property should indicate the entry file for the package.Implementation of functionsNow it’s time to implement the mathematical functions (addition, subtraction, multiplication, division) in the index.js file.function sum(a, b) { return a + b;}function subtract(a, b) { return a - b;}function multiply(a, b) { return a * b;}function divide(a, b) { if (b === 0) { throw new Error(\"Division by 0 is invalid.\"); } return a / b;}After implementing the functions, we need to export them:module.exports = { sum, subtract, multiply, divide,};Package publishingTo publish the package it is necessary to have an account on the NPM platform. If you don’t have an account yet, you can easily create one at https://www.npmjs.com/.When you already have an account created, you can login by running the command:npm loginOnce logged in, just navigate to the project directory and run:npm publishPackage usageNow it is possible to use the package functions in other projects. For that you need to install it in your project:npm i just-calcExample usage of the just-calc package:const calc = require(\"just-calc\");const a = 4;const b = 2;console.log(calc.sum(a, b));console.log(calc.subtract(a, b));console.log(calc.multiply(a, b));console.log(calc.divide(a, b));ConclusionIn this tutorial, I showed you how to create and publish an NPM package that provides the four basic math operations. Now these functions can be reused in other projects.This was just a simple tutorial intended to quickly and easily demonstrate how to create and publish an NPM package. You can do something more elaborate like separate the functions by files, write tests for the functions…" }, { "title": "3 programming sites that I really like", "url": "/posts/3-programming-sites-that-I-really-like/", "categories": "Programming", "tags": "study", "date": "2022-12-28 00:33:00 -0300", "snippet": "Every programmer has a site collection they love. In this post I will list the 3 programming sites that I like the most.HackerRankThis platform is just perfect for anyone looking to improve their l...", "content": "Every programmer has a site collection they love. In this post I will list the 3 programming sites that I like the most.HackerRankThis platform is just perfect for anyone looking to improve their logic programming skills. It has several challenges ranging from basic to advanced level. In addition, HackerRank has a code editor that allows you to solve challenges in different languages (Python, JavaScript, Java…) without having to leave your browser.Another positive point of the platform is that each challenge has a “discussions” tab where you can discuss with other people and thus, perhaps, arrive at a better solution for the challenge.Access HackerRankCodePenCodePen, in my opinion, is a platform that focuses more on creating art using HTML, CSS and JavaScript. As soon as you access the platform, you will come across creations that will make you think: “How is it possible to do this with just HTML, CSS and JavaScript?”.If you don’t have that artistic sense, CodePen can also be useful for simple things like: creating a first simple version of an idea, storing code to use as an iframe on another site, testing some library or framework (CodePen allows the use of libraries and frameworks through CDN) and more what your imagination allows.Access CodePenSololearnSoloearn is a platform that I use to learn something new or simply remember concepts that I forgot over time. This platform has several courses that are divided into theoretical content in text and practical content in the form of exercises.In addition, Sololearn has a forum where you can interact with other users and a “Code Playground” that allows you to unleash your imagination and easily put into practice the new knowledge obtained.Access Sololearn" }, { "title": "Useful NPM (v8) commands", "url": "/posts/useful-npm-v8-commands/", "categories": "Programming", "tags": "npm, commands", "date": "2022-02-19 00:33:00 -0300", "snippet": "NPM (Node Package Manager) is an essential tool for anyone developing with JavaScript. So in this post I will list some useful commands when using NPM.Starting a projectWe can start a project by ru...", "content": "NPM (Node Package Manager) is an essential tool for anyone developing with JavaScript. So in this post I will list some useful commands when using NPM.Starting a projectWe can start a project by running npm init.We can also do npm init -y if we want a default package.json.Searching packagesYou can fetch NPM packages in two ways. The first way is by directly accessing the NPM website. The second way is using the NPM CLI:npm search &lt;package&gt;Installing packagesA very important NPM command is install. It allows us to add dependencies to our project.Some use cases:npm install # install the packages specified in package.jsonnpm install package # install a packagenpm install package@4.0.1 # install a specific versionnpm install package@latest # install the latest versionnpm install package -D # install as development dependencynpm install -g package # install package globallyUninstalling packagesWe can uninstall a package using uninstall:npm uninstall packageUpdating packagesWe can update packages using update:npm update // update packagesnpm update package // update a specific packageWe can still list outdated packages by doing:npm outdatedOther useful NPM commandsSome other commands that can be useful when we are working with NPM:npm login # log innpm logout # log outnpm whoami # display logged in usernpm publish # publish a package" } ]
